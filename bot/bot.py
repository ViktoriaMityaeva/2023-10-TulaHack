import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.orm import sessionmaker
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String, DateTime, func
from random import shuffle
import db_services
import os

# Create the bot instance
bot = telebot.TeleBot(os.environ.get('BOT_TOKEN'))

# Create the menu keyboard
menu_keyboard = InlineKeyboardMarkup()
menu_keyboard.add(InlineKeyboardButton(text='üëÄ Random coffe', callback_data='Random coffe'))
menu_keyboard.add(InlineKeyboardButton(text='üìä –ì—Ä–∞—Ñ–∏–∫ –≤—Å—Ç—Ä–µ—á', callback_data='–ì—Ä–∞—Ñ–∏–∫ –≤—Å—Ç—Ä–µ—á'))
menu_keyboard.add(InlineKeyboardButton(text='üéà –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è', callback_data='–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è'))
menu_keyboard.add(InlineKeyboardButton(text='üë• –û—Ç—á—ë—Ç—ã –ø—Ä–æ—à–ª—ã—Ö –≤—Å—Ç—Ä–µ—á', callback_data='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—à–ª—ã—Ö –≤—Å—Ç—Ä–µ—á'))
menu_keyboard.add(InlineKeyboardButton(text='üè† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏', callback_data='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏'))
# Register command handlers
@bot.message_handler(commands=['register'])
def handle_register(message):
    user = db_services.get_user_by_tg_id(message.from_user.id)
    if user:
        bot.reply_to(message, "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
    else:
        db_services.create_user(telegram_id=message.from_user.id, username=message.from_user.username,
                    first_name=message.from_user.first_name, last_name=message.from_user.last_name)
        bot.reply_to(message, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n–¢—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /menu.")

@bot.message_handler(commands=['pair'])
def handle_pair(message):
    users = db_services.get_all_users()
    shuffle(users)

    if len(users) % 2 != 0:
        bot.reply_to(message, "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É.")

    else:
        for i in range(0, len(users), 2):
            db_services.add_pair(users[i].id, users[i+1].id)
        bot.reply_to(message, "–î–ª—è –≤–∞—Å —Å–æ–∑–¥–∞–Ω–∞ –ø–∞—Ä–∞ :)")

@bot.message_handler(commands=['start'])
def handle_pair(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç, —è Random Coffee, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ü•≥ –Ø –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç –Ω–æ–≤—ã–µ –ø—É—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è, –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –æ–±–º–µ–Ω–∞ –∏–¥–µ—è–º–∏ üòº –ï—Å–ª–∏ —Ç—ã –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, —Ç–æ –¥–∞–≤–∞–π —Å–∫–æ—Ä–µ–π –Ω–∞—á–Ω—ë–º üôå\n–ù–∞–∂–º–∏ /menu")


@bot.message_handler(commands=['menu'])
def handle_pair(message):
    user = db_services.get_user_by_tg_id(message.from_user.id)
    if user:
        bot.reply_to(message, "–ù–∞—à–µ –º–µ–Ω—é:",
                    reply_markup=menu_keyboard)
    else:
        bot.reply_to(message, "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /register")

# Handle the menu options
@bot.callback_query_handler(func=lambda call: True)
def handle_menu_selection(call):
    user = db_services.get_user_by_tg_id(call.message.from_user.id)
    print(call.message.from_user.id)
    print(user)
    if user:
        option_selected = call.data
        if option_selected == 'Random coffe':
            # Handle option 1
            db_services.active_user(call.message.from_user.id)
            bot.edit_message_text(call.message.chat.id,  '–¢—ã –≤ Random coffe, –æ–∂–∏–¥–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚ú®', message_id=call.message.message_id)
        elif option_selected == '–ì—Ä–∞—Ñ–∏–∫ –≤—Å—Ç—Ä–µ—á':
            bot.edit_message_text(call.message.chat.id, '–ì—Ä–∞—Ñ–∏–∫ –≤—Å—Ç—Ä–µ—á: ‚ú®', message_id=call.message.message_id,)
        elif option_selected == '–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è':
            db_services.disactive_user(call.message.from_user.id)
            bot.edit_message_text(call.message.chat.id, '–í—ã –±–æ–ª—å—à–µ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ random coffe', message_id=call.message.message_id,)
        elif option_selected == '–û—Ç—á—ë—Ç—ã –ø—Ä–æ—à–ª—ã—Ö –≤—Å—Ç—Ä–µ—á':
            bot.edit_message_text(call.message.chat.id, '–ü–æ–∫–∞ —á—Ç–æ –≤—ã –Ω–µ –±—ã–ª–∏ –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏ :(', message_id=call.message.message_id,)
    else:
        bot.reply_to(call.message, "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /register")

# Start the bot
bot.polling()